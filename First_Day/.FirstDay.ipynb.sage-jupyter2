{"input":"","kernel":"ir-sage","pos":13,"cell_type":"code","type":"cell","id":"2f8f2c"}
{"input":"","pos":10,"cell_type":"code","type":"cell","id":"fbb557","kernel":"ir-sage"}
{"input":"","pos":14,"cell_type":"code","type":"cell","id":"467610","kernel":"ir-sage"}
{"input":"","pos":16,"cell_type":"code","type":"cell","id":"a48950","kernel":"ir-sage"}
{"input":"","pos":20,"cell_type":"code","type":"cell","id":"c23bce","kernel":"ir-sage"}
{"input":"","pos":22,"cell_type":"code","type":"cell","id":"03f5db","kernel":"ir-sage"}
{"input":"","pos":22.5,"cell_type":"code","type":"cell","id":"03e5a5","kernel":"ir-sage"}
{"input":"","pos":25,"cell_type":"code","type":"cell","id":"a4541a","kernel":"ir-sage"}
{"input":"","pos":25.25,"type":"cell","id":"fa58f8","kernel":"ir-sage"}
{"input":"","pos":25.5,"type":"cell","id":"2e238e","kernel":"ir-sage"}
{"input":"","pos":29,"cell_type":"code","type":"cell","id":"891bca","kernel":"ir-sage"}
{"input":"","pos":3,"cell_type":"code","type":"cell","id":"3016f3","kernel":"ir-sage"}
{"input":"","pos":31,"cell_type":"code","type":"cell","id":"b21833","kernel":"ir-sage"}
{"input":"","pos":33,"cell_type":"code","type":"cell","id":"f694de","kernel":"ir-sage"}
{"input":"","pos":35,"cell_type":"code","type":"cell","id":"008e45","kernel":"ir-sage"}
{"input":"","pos":38,"cell_type":"code","type":"cell","id":"a6abf6","kernel":"ir-sage"}
{"input":"","pos":40,"cell_type":"code","type":"cell","id":"e85124","kernel":"ir-sage"}
{"input":"","pos":42.5,"type":"cell","id":"9b74d8","kernel":"ir-sage"}
{"input":"","pos":44.5,"type":"cell","id":"9d6a08","kernel":"ir-sage"}
{"input":"","pos":44.75,"type":"cell","id":"743aca","kernel":"ir-sage"}
{"input":"","pos":47,"cell_type":"code","type":"cell","id":"b50ccc","kernel":"ir-sage"}
{"input":"","pos":49,"cell_type":"code","type":"cell","id":"f4e0c1","kernel":"ir-sage"}
{"input":"","pos":7,"cell_type":"code","type":"cell","id":"3109d6","kernel":"ir-sage"}
{"input":"","pos":8,"cell_type":"code","type":"cell","id":"1e0dc4","kernel":"ir-sage"}
{"input":"","scrolled":true,"kernel":"ir-sage","pos":5,"cell_type":"code","type":"cell","id":"b40fda"}
{"input":"","scrolled":true,"pos":51,"cell_type":"code","type":"cell","id":"56eea8","kernel":"ir-sage"}
{"input":"\n\n\n","pos":1,"cell_type":"code","type":"cell","id":"4c1b66","kernel":"ir-sage"}
{"kernel":"ir-sage","input":"","id":"44f339","pos":18,"cell_type":"code","type":"cell"}
{"type":"cell","id":"014f7a","pos":41,"input":"\n","cell_type":"code"}
{"type":"cell","id":"0e17e9","pos":54,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"106c93","pos":52,"input":"## Resources for learning R \n\nThat was a short introduction to R , but we will provide you with more\nfunctions and a more complete sense of the language as the course progresses. You \nmight find the following tips and resources helpful.\n\n- In this course we will be using the `dplyr` (for data wrangling) and `ggplot2` (for \ndata visualization) extensively. If you are googling for R code, make sure\nto also include these package names in your search query. For example, instead\nof googling \"scatterplot in R\", google \"scatterplot in R with ggplot2\".\n\n- The following cheathseets may come in handy throughout the course. Note that some \nof the code on these cheatsheets may be too advanced for this course, however \nmajority of it will become useful as you progress through the course material.\n    - [Data wrangling cheatsheet](http://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf)\n    - [Data visualization cheatsheet](http://www.rstudio.com/wp-content/uploads/2015/12/ggplot2-cheatsheet-2.0.pdf)\n\n\n","cell_type":"markdown"}
{"type":"cell","id":"149bf2","pos":37,"input":"## Dataset 2: Present birth records\n\nIn the previous few pages, you recreated some of the displays and preliminary \nanalysis of Arbuthnot's baptism data. Next you will do a similar analysis, \nbut for present day birth records in the United States. Load up the \npresent day data with the following command.\n\n\n```{r load-present-data}\npresent<-read.csv(\"present.csv\")\n```","cell_type":"markdown"}
{"type":"cell","id":"1bf13a","pos":50,"input":"In what year did we see the most total number of births in the U.S.? *Hint:* Sort \nyour dataset in descending order based on the `total` column. \n<ol>\n<li> 1940 </li>\n<li> 1957 </li>\n<li> 1961 </li>\n<li> 1991 </li>\n<li> 2007 </li>\n</ol>\n","cell_type":"markdown"}
{"type":"cell","id":"1d7dac","pos":4,"input":"This command instructs R to load some data. The Arbuthnot baptism counts for boys \nand girls. \n\nThe Arbuthnot data set refers to Dr. John Arbuthnot, an 18<sup>th</sup> century \nphysician, writer, and mathematician. He was interested in the ratio of newborn\nboys to newborn girls, so he gathered the baptism records for children born in\nLondon for every year from 1629 to 1710. We can take a look at the data by \ntyping its name into an active R cell.\n\n```{r view-data}\narbuthnot\n```\n\n","cell_type":"markdown"}
{"type":"cell","id":"2fe8a6","pos":48,"input":"Calculate the boy-to-girl ratio each year, and store these values in a new variable called `prop_boy_girl` in the `present` dataset. Plot these values over time. Which of the following best describes the trend? \n<ol>\n<li> There appears to be no trend in the boy-to-girl ratio from 1940 to 2013. </li>\n<li> There is initially an increase in boy-to-girl ratio, which peaks around 1960. After 1960 there is a decrease in the boy-to-girl ratio, but the number begins to increase in the mid 1970s. </li>\n<li> There is initially a decrease in the boy-to-girl ratio, and then an increase between 1960 and 1970, followed by a decrease. </li>\n<li> The boy-to-girl ratio has increased over time. </li>\n<li> There is an initial decrease in the boy-to-girl ratio born but this number appears to level around 1960 and remain constant since then. </li>\n</ol>","cell_type":"markdown"}
{"type":"cell","id":"36a26a","pos":12,"input":"### Some Exploration\n\nLet's start to examine the data a little more closely. We can access the data in\na single column of a data frame separately using a command like\n\n```{r view-boys}\narbuthnot$boys\n```\n\nThis command will only show the number of boys baptized each year. The dollar\nsign basically says \"go to the data frame that comes before me, and find the \nvariable that comes after me\".\n","cell_type":"markdown"}
{"type":"cell","id":"36aa44","pos":11,"input":"You should see that the data frame contains the columns `year`,  `boys`, and \n`girls`. At this point, you might notice that many of the commands in R look a \nlot like functions from math class; that is, invoking R commands means supplying\na function with some number of arguments. The `dim` and `names` commands, for \nexample, each took a single argument, the name of a data frame.\n","cell_type":"markdown"}
{"type":"cell","id":"387e00","pos":44,"input":"Calculate the total number of births for each year and store these values in a new \nvariable called `total` in the `present` dataset. Then, calculate the proportion of \nboys born each year and store these values in a new variable called `prop_boys` in \nthe same dataset. Plot these values over time and based on the plot determine if the \nfollowing statement is true or false: The proportion of boys born in the US has \ndecreased over time. \n<ol>\n<li> True </li>\n<li> False </li>\n</ol>","cell_type":"markdown"}
{"type":"cell","id":"3bf834","pos":9,"input":"The *dim* command should output `82 3`, indicating that there are 82 rows and 3 \ncolumns. You can see the names of these columns (or \nvariables) by typing:\n\n```{r names-data}\nnames(arbuthnot)\n```\n","cell_type":"markdown"}
{"type":"cell","id":"457061","pos":32,"input":"Note that using `geom_line()` instead of `geom_point()` results in a line plot instead\nof a scatter plot. You want both? Just layer them on:\n\n```{r plot-total-vs-year-line-and-point}\nggplot(data = arbuthnot, aes(x = year, y = total)) +\n  geom_line() +\n  geom_point()\n```\n\n**Exercise**: Now, generate a plot of the proportion of boys born over time. What \ndo you see? Write your answer in markdown below. Feel free to insert a cell.\n\n```{r plot-proportion-of-boys-over-time}\n\nggplot(data = arbuthnot, aes(x = year, y = boys/total)) +\n  \n  geom_point()\n```\n\n","cell_type":"markdown"}
{"type":"cell","id":"594bf6","pos":23,"input":"","cell_type":"code"}
{"type":"cell","id":"623521","pos":21,"input":"### R as a big calculator\n\nNow, suppose we want to plot the total number of baptisms. To compute this, we \ncould use the fact that R is really just a big calculator. We can type in \nmathematical expressions like\n\n```{r calc-total-bapt-numbers}\n5218 + 4683\n```\n\nto see the total number of baptisms in 1629. We could repeat this once for each \nyear, but there is a faster way. If we add the vector for baptisms for boys to \nthat of girls, R will compute all sums simultaneously.\n\n```{r calc-total-bapt-vars}\narbuthnot$boys + arbuthnot$girls\n```","cell_type":"markdown"}
{"type":"cell","id":"6263fc","pos":46,"input":"Create a new variable called `more_boys` which contains the value of either `TRUE` \nif that year had more boys than girls, or `FALSE` if that year did not. Based on this \nvariable which of the following statements is true? \n<ol>\n<li> Every year there are more girls born than boys. </li>\n<li> Every year there are more boys born than girls. </li>\n<li> Half of the years there are more boys born, and the other half more girls born. </li>\n</ol>","cell_type":"markdown"}
{"type":"cell","id":"7952d0","pos":2,"input":"Going forward you will be asked to load any relevant packages at the beginning\nof each lab.\n\n## Dataset 1: Dr. Arbuthnot's Baptism Records\n\nTo get you started, enter the following command at the R prompt.\n```{r load-abrbuthnot-data}\nsource(\"http://www.openintro.org/stat/data/arbuthnot.R\")\n```","cell_type":"markdown"}
{"type":"cell","id":"872f4e","pos":36,"input":"This command adds a new variable to the `arbuthnot` data frame containing the values\nof either `TRUE` if that year had more boys than girls, or `FALSE` if that year \ndid not (the answer may surprise you). This variable contains different kind of \ndata than we have considered so far. All other columns in the `arbuthnot` data \nframe have values are numerical (the year, the number of boys and girls). Here, \nwe've asked R to create *logical* data, data where the values are either `TRUE` \nor `FALSE`. In general, data analysis will involve many different kinds of data \ntypes, and one reason for using R is that it is able to represent and compute \nwith many of them.","cell_type":"markdown"}
{"type":"cell","id":"89e6f7","pos":26,"input":"What in the world is going on here? The `%>%` operator is called the **piping** \noperator. Basically, it takes the output of the current line and pipes it into \nthe following line of code.\n","cell_type":"markdown"}
{"type":"cell","id":"8f3bb1","pos":28,"input":"**Where is the new variable? ** When you make changes to variables in your dataset, \nclick on the name of the dataset again to update it in the data viewer.\n\n```{r names-data}\nnames(arbuthnot)\n```","cell_type":"markdown"}
{"type":"cell","id":"915c68","pos":17,"input":"Before we review the code for this plot, let's summarize the trends we see in the \ndata. Go the 'Cell' option above and change the type of the following cell to 'markdown'. Markdown is a way to format your text to make it look nice. Write your name and short description of the plot above. Then go online and find how to format your text in markdown to make your name in __bold__. ","cell_type":"markdown"}
{"type":"cell","id":"95eed4","pos":42,"input":"**Exercise**: What years are included in this dataset? **Hint:** Use the `range` \nfunction and `present$year` as its argument.","cell_type":"markdown"}
{"type":"cell","id":"9900c8","pos":51.5,"input":""}
{"type":"cell","id":"9c9985","pos":30,"input":"You'll see that there is now a new column called `total` that has been tacked on\nto the data frame. The special symbol `<-` performs an *assignment*, taking the \noutput of one line of code and saving it into an object in your workspace. In \nthis case, you already have an object called `arbuthnot`, so this command updates\nthat data set with the new mutated column.\n\nWe can make a plot of the total number of baptisms per year with the following command.\n\n```{r plot-total-vs-year-line}\nggplot(data = arbuthnot, aes(x = year, y = total)) +\n  geom_line()","cell_type":"markdown"}
{"type":"cell","id":"b33e5b","pos":27,"input":"**A note on piping: ** Note that we can read these three lines of code as the following: \n\n*\"Take the `arbuthnot` dataset and **pipe** it into the `mutate` function. \nUsing this mutate a new variable called `total` that is the sum of the variables\ncalled `boys` and `girls`. Then assign this new resulting dataset to the object\ncalled `arbuthnot`, i.e. overwrite the old `arbuthnot` dataset with the new one\ncontaining the new variable.\"*\n\nThis is essentially equivalent to going through each row and adding up the boys \nand girls counts for that year and recording that value in a new column called\ntotal.","cell_type":"markdown"}
{"type":"cell","id":"db0be5","pos":34,"input":"Finally, in addition to simple mathematical operators like subtraction and \ndivision, you can ask R to make comparisons like greater than, `>`, less than,\n`<`, and equality, `==`. For example, we can ask if boys outnumber girls in each \nyear with the expression\n\n```{r boys-more-than-girls}\narbuthnot <- arbuthnot %>%\n  mutate(more_boys = boys > girls)\n```","cell_type":"markdown"}
{"type":"cell","id":"debc55","pos":19,"input":"Back to the code... We use the `ggplot()` function to build plots. If you run the \nplotting code in your console, you should see the plot appear under the *Plots* tab \nof the lower right panel of RStudio. Notice that the command above again looks like \na function, this time with arguments separated by commas. \n\n- The first argument is always the dataset. \n- Next, we provide thevariables from the dataset to be assigned to `aes`thetic \nelements of the plot, e.g. the x and the y axes. \n- Finally, we use another layer, separated by a `+` to specify the `geom`etric \nobject for the plot. Since we want to scatterplot, we use `geom_point`.\n\nYou might wonder how you are supposed to know the syntax for the `ggplot` function. \nThankfully, R documents all of its functions extensively. To read what a function \ndoes and learn the arguments that are available to you, just type in a question mark \nfollowed by the name of the function that you're interested in. Try the following in\nyour console:\n\n```{r plot-help, tidy = FALSE}\n?ggplot\n```\n","cell_type":"markdown"}
{"type":"cell","id":"e49788","pos":53,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"e7d71a","pos":0,"input":"# Intro to Markdown, Jupyter Notebook, and R\n\n## R Packages\n\nR is an open-source programming language, meaning that users can contribute\npackages that make our lives easier, and we can use them for free. For this lab,\nand many others in the future, we will use the following R packages:\n\n- `dplyr`: for data wrangling\n- `ggplot2`: for data visualization\n\nNext, you need to load the packages in your working environment. We do this with\nthe `library` function. Note that you only need to **install** packages once, but\nyou need to **load** them each time.\n\n```{r load-packages, message = FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n","cell_type":"markdown"}
{"type":"cell","id":"e7f475","pos":6,"input":"However printing the whole dataset in the cell is not that useful. Arbuthnot's data in a kind of spreadsheet or table called a *data frame*.\n\nYou can see the dimensions of this data frame by typing:\n\n```{r dim-data}\ndim(arbuthnot)\n```\n\nAnd you can see just the top part of a dataset by using the *head* command:\n\n```{r head-data}\nhead(arbuthnot)\n```","cell_type":"markdown"}
{"type":"cell","id":"ea4e31","pos":39,"input":"The data are stored in a data frame called `present` which should now be loaded in \nyour workspace.\n\n4. How many variables are included in this data set?\n<ol>\n<li> 2 </li>\n<li> 3 </li>\n<li> 4 </li>\n<li> 74 </li>\n<li> 2013 </li>\n</ol>","cell_type":"markdown"}
{"type":"cell","id":"ecc1a5","pos":24,"input":"What you will see are 82 numbers (in that packed display, because we aren’t \nlooking at a data frame here), each one representing the sum we’re after. Take a\nlook at a few of them and verify that they are right.\n\n### Adding a new variable to the data frame\n\nWe'll be using this new vector to generate some plots, so we'll want to save it \nas a permanent column in our data frame.\n\n```{r calc-total-bapt-vars-save}\narbuthnot <- arbuthnot %>%\n  mutate(total = boys + girls)\n```\n","cell_type":"markdown"}
{"type":"cell","id":"ecfa25","pos":43,"input":"","cell_type":"code"}
{"type":"cell","id":"f28615","pos":15,"input":"Notice that the way R has printed these data is different. When we looked at the\ncomplete data frame, we saw 82 rows, one on each line of the display. These data\nare no longer structured in a table with other variables, so they are displayed \none right after another. Objects that print out in this way are called vectors; \nthey represent a set of numbers. \n\nR has some powerful functions for making graphics. We can create a simple plot \nof the number of girls baptized per year with the command\n\n```{r plot-girls-vs-year}\nggplot(data = arbuthnot, aes(x = year, y = girls)) +\n  geom_point()\n```","cell_type":"markdown"}
{"type":"cell","id":"fd863a","pos":45,"input":"","cell_type":"code"}
{"type":"file","last_load":1543323964746}
{"type":"settings","kernel":"ir-sage","backend_state":"running","metadata":{"language_info":{"codemirror_mode":"r","file_extension":".r","mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.4"}},"kernel_usage":{"cpu":0,"memory":62439424},"trust":true}