{"backend_state":"running","kernel":"ir-sage","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":215887872},"trust":true,"type":"settings"}
{"cell_type":"markdown","exec_count":1,"id":"478e41","input":"## More Important R commands\n\n\n* ```dt(x, df)```: This function gives the height of the distribution function. Generally only useful for drawing the graph of the t distribution.\n* ```rt(num, df)```: Creates Random t's.\n* ```pt(x, df)```: This function is used to determine probabilities. Namely chance that a t value will be less than a given x. \n* ```qt(x, df)```: This function gives the t value that has a given x percent less than it. It is an inverse function to pt. \n\n```df=20```\n\nExplore with these functions to create:\n\n* A graph of the t distribution\n* A graph of the t distribution with a histogram of random t's\n* A analysis of the quantiles of random t's\n* A graph of the t distribution with rejection region an upper rejection region","kernel":"ir-sage","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":113,"id":"796bf1","input":"If we want a \"two sided\" rejection region we can do that too. \n\n```\ngg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\nlowcritval<-qnorm(.025, mean=0, sd=1)\nhighcritval<-qnorm(.025, mean=0, sd=1, lower.tail=FALSE)\n```\n```\nggplot(gg) + \n  geom_path(aes(x,y)) +\n  geom_ribbon(data=gg[gg$x < lowcritval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)+\n  geom_ribbon(data=gg[gg$x>highcritval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)\n```\n","kernel":"ir-sage","pos":2.8671875,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":120,"id":"b4351c","input":"### qnorm\n\nIf we want to know what particular score is greater than a certain percentage of values of the given data then we can use ```qnorm```. This can be useful in displaying the rejection regions on the plot of a normal curve. \n\n```\ngg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\ncritval<-qnorm(.025, mean=0, sd=1)\ncritval\nggplot(gg) + \n  geom_path(aes(x,y)) +\n  geom_ribbon(data=gg[gg$x<critval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)\n```","kernel":"ir-sage","pos":2.84375,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":9,"id":"92fc86","input":"### dnorm\n\nWe can use dnorm to create a graph of the normal distribution. We do this be making a list of x values and then creating a list of y values that represent the height of the normal distribution. \n\n```\ngg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\nhead(gg)\nggplot(gg) + \n  geom_path(aes(x,y)) \n  ```\n","kernel":"ir-sage","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":96,"id":"4e5043","input":"### pnorm\n\nWe can now use pnorm to calculate how what proportion of the random numbers will we expect to be less than a certain value.\n\n```\nvalues=c(-2, -1, 0, 1, 2)\npercentages<-pnorm(values, mean=0, sd=1)\npercentages\nquantile(rn, percentages)\n```\n","kernel":"ir-sage","pos":2.75,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"055c4d","input":"## Your Turn\n\nWe will now simulate another power calculation. In this case the power will come out quite abit higher. Let's imagine that we work at quality control at a Diet Coke filling plant. Diet Coke cans are supposed to have a volume of 335 ml, and generally the standard deviation of the filler is about 3 ml. Your manager wants to be certain that if plant procedures are such that if 30 cans are chosen at random, and the machine is overfilling by 5 ml that you will be able to detect that error. Let's make some calculations.\n\nCreate the following variables:\n\n* ```expmean```: This is the amount we want the can the fill to.\n* ```altmean```: The mean of the weird situation we are supposed to test.\n* ```stdev```: The standard deviation of in the amount that is filled in a single can.\n* ```samplesize```: The number of samples.\n* ```standerr```: The amount of variation in means (found by taking the standard deviation for one and dividing by the square root of the sample size)\n* ```df```: degrees of freedom (one less than the sample size)\n* ```teststatistic```: How many standard deviation of means between ```altmean``` and ```expmean```. (This is found by find the difference between the two means and dividing by the ```standerr```.)\n\n```\nexpmean<-??\naltmean<-??\nstdev<-?\nsamplesize<-?\nstanderr<-stdev/sqrt(?)\ndf<-?\nteststatistic<-(altmean-expmean)/standerr\n```","pos":3.96875,"type":"cell"}
{"cell_type":"markdown","id":"0b1401","input":"**Compute the power now and explain what it means in the context of our Taylor Swift experiment**","pos":3.96484375,"type":"cell"}
{"cell_type":"markdown","id":"2bafcc","input":"Now do this over and over again. Use the ```replicate``` function to see about how often we fail to reject.\n\n```\npvalues<-replicate(1000,t.test(meas, mu=335, alternative =\"greater\")$p.value )\nquantile(pvalues, c(.15, .30, .45, .6, .75, .9))\n```","pos":3.998046875,"type":"cell"}
{"cell_type":"markdown","id":"36ba77","input":"# How to compute the power. \nWe need to the determine the size of the blue area to determine the power of our test. That blue area is the probability of making a type II error. The power is the complement of that probability (so 1-Prob(type II)). To determine the size of the blue area we need to determine where the critical value sits in the blue distribution. The blue distribution is centered on the value of the test statistic (how many standard deviations our measurement was from expected) in this case, 0.65867. Our critical value is 1.7207 away from the what we have as our null hypothesis. This means the critical value is 1.7207-0.65867=1.06203 away from the center of the alternative distribution. So the using the ```pt`` function so we can determine the area of the blue.\n\n```\n1-pt(critValue-testStatistic, 21, lower.tail=TRUE)\n```","pos":3.953125,"type":"cell"}
{"cell_type":"markdown","id":"47698b","input":"## Power\n\nLet's look at a situation that is similar to the ones that we looked at with our Taylor Swift experiment we did. In that experiment our null hypothesis was that there was no difference between the test with the music and the test without. The essential information is that from our experiment is:\n\n|Statistic | Value|\n|----------|------|\n|mean difference|0.7727|\n|standard deviation of differences |5.502655 |\n|standard error| 5.502655/sqrt(22)=1.17317|\n|Sample Size | 22|\n|Degrees of freedom| Sample Size - 1 = 21|\n|test statistic| (.7727-0)/1.17317 = 0.65867|\n\nNow let's draw the distribution of the expected means if the null hypothesis was true.\n\n```\ndf   <- 21\np    <- 0.05\ngg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dt(gg$x,df)\ncritValue<-qt(p,df,lower.tail=F)\ntestStatistic<-0.65867\nggplot(gg) + \n  geom_path(aes(x,y), colour=\"red\") +\n  geom_path(aes(altx,y), colour=\"blue\")+\n  geom_ribbon(data=gg[gg$x>critValue,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)\n```\n","pos":3.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"58b420","input":"Now let's see this work with a random example. Let's say that the we our filling machine is over filling the bottles and that the true average is not 350 instead of 335. We can create such a sample with ```rnorm(30, 350, 3)```. \n\n```\nmeas=rnorm(30,340,3)\nt.test(meas, mu=335 )\n```","pos":3.9921875,"type":"cell"}
{"cell_type":"markdown","id":"5e54ba","input":"The power of the experiment was 15%. This means that if the observed difference was true, then we had only a 15% chance of detecting the difference that Taylor Swift made on our tests.","pos":3.966796875,"type":"cell"}
{"cell_type":"markdown","id":"802c73","input":"## Important R commands for the Normal Distribution\n\n\n* ```dnorm(x, mean, sd)``` - Density of the Normal distribution.\n* ```rnorm(num, mean, sd)``` - returns a number of random numbers.\n* ```pnorm(x, mean, sd)``` - Probability of getting less than a given value. \n* ```qnorm(x)``` - the score for a given percentile.\n\nLet's learn to use each of these commands.\n","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"837efc","input":"# Tests, Error, and Power\n\nToday we are going to explore the relationship between tests, errors, and power. We are also going to learn about various functions that exist for lots of distributions. These are the ```d```, ```r```, ```p```, and ```q``` functions.\n\n","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d1123","input":"### rnorm\n\nLet's create a list of random normal numbers and compare that to the graph we just made. \n\n```\nrn<-rnorm(100, mean=0, sd=1)\nrn\nggplot() + \n  geom_histogram(aes(x=rn, stat(density), colour=\"red\", fill=\"red\", alpha=.5))+\n    geom_path(aes(gg$x,gg$y)) \n```","pos":2.625,"type":"cell"}
{"cell_type":"markdown","id":"9c1e28","input":"Now let's create a distribution that mirrors the one that we saw in our data. This one would not be centered at zero but at the t that represents the obervation we made. This value is called the **test statistic**\n\n```\ngg$altx<-gg$x+0.65867\nggplot(gg) + \n  geom_path(aes(x,y), colour=\"red\") +\n  geom_path(aes(altx,y), colour=\"blue\")+\n  geom_ribbon(data=gg[gg$x>critValue,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)+\n  geom_ribbon(data=gg[gg$altx<critValue,], aes(altx,ymin=0,ymax=y), \n               colour=\"blue\", fill=\"blue\", alpha=.5)\n```","kernel":"ir-sage","pos":3.8125,"type":"cell"}
{"cell_type":"markdown","id":"a1c79c","input":"The function ```pt``` can calculate the power by finding how much blue is shaded. To do this we need to find where the critical value is compared to the teststatistic (the center of the blue distribution). Do thisthe by (Note: how we changed lower.tail to FALSE so that we get the area that wasn't blue):\n\n```\npt(critValue-teststatistic, df, lower.tail=FALSE)\n```\n","pos":3.991455078125,"type":"cell"}
{"cell_type":"markdown","id":"b2e495","input":"Now that you have those variables let's make some graphs to show the distribution of means of samples of size 30. \n\nNow let's create a dataframe that will have the information for the graphs. \nWe will start by looking at standard deviation between -5 and 5 for the expected mean. Then create a shifted distribution for the alternative mean. We will find the y values for a t distribution with the proper degrees of freedom. Finally we will find where the critical value would change our mind. \n\n```\nyt   <- data.frame(x=seq(-10,10,0.02))\nyt$y <- dt(yt$x,df)\nyt$altx<-yt$x+teststatistic\ncritValue<-qt(p,df,lower.tail=F)\ncritValue\n```","pos":3.98828125,"type":"cell"}
{"cell_type":"markdown","id":"c4a6d8","input":"**Explain how the following affect the power.**\n\n* The amount of variation in the data\n* The closeness between the hypotheses\n* Our willingness to make a type I error\n* The sample size\n","pos":5,"type":"cell"}
{"end":1555693059740,"exec_count":127,"id":"4699f3","input":"library(ggplot2)","kernel":"ir-sage","pos":1.5,"start":1555693059687,"state":"done","type":"cell"}
{"end":1555693325261,"exec_count":128,"id":"10c78d","input":"gg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\nhead(gg)\nggplot(gg) + \n  geom_path(aes(x,y)) ","kernel":"ir-sage","output":{"0":{"data":{"text/html":"<table>\n<thead>\n\t<tr><th scope=col>x</th><th scope=col>y</th></tr>\n</thead>\n<tbody>\n\t<tr><td>-5.00       </td><td>1.486720e-06</td></tr>\n\t<tr><td>-4.98       </td><td>1.642751e-06</td></tr>\n\t<tr><td>-4.96       </td><td>1.814431e-06</td></tr>\n\t<tr><td>-4.94       </td><td>2.003252e-06</td></tr>\n\t<tr><td>-4.92       </td><td>2.210839e-06</td></tr>\n\t<tr><td>-4.90       </td><td>2.438961e-06</td></tr>\n</tbody>\n</table>\n"}},"1":{"data":{"image/svg+xml":"37addf40253d1f0dcab4a3711a6e1ba3c40e7359"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":2.5,"start":1555693324597,"state":"done","type":"cell"}
{"end":1555693572403,"exec_count":132,"id":"2dd0a7","input":"rn<-rnorm(100, mean=0, sd=1)\nrn\nggplot() + \n  geom_histogram(aes(x=rn, stat(density), colour=\"red\", fill=\"red\", alpha=.5))+\n    geom_path(aes(gg$x,gg$y)) ","kernel":"ir-sage","output":{"0":{"data":{"text/html":"<ol class=list-inline>\n\t<li>-1.12407600498818</li>\n\t<li>0.230124799690697</li>\n\t<li>0.714478087713889</li>\n\t<li>1.31407812208492</li>\n\t<li>1.4629472017854</li>\n\t<li>-0.400297089282103</li>\n\t<li>-0.249624336643013</li>\n\t<li>0.906813053333921</li>\n\t<li>-1.19846542390382</li>\n\t<li>0.296818098589518</li>\n\t<li>-0.0295948501503987</li>\n\t<li>0.0484922567495506</li>\n\t<li>0.955697227613213</li>\n\t<li>-1.12054726046243</li>\n\t<li>0.281085369125067</li>\n\t<li>-0.794710751579416</li>\n\t<li>-0.654506663156215</li>\n\t<li>-0.0685955760676451</li>\n\t<li>1.17846628716225</li>\n\t<li>-1.02827903076887</li>\n\t<li>0.766620609095832</li>\n\t<li>-1.02419521345274</li>\n\t<li>0.0788113461481088</li>\n\t<li>-0.26681578558765</li>\n\t<li>-0.0532395755321314</li>\n\t<li>-0.0440062665382275</li>\n\t<li>-0.275414322117846</li>\n\t<li>1.44350602642831</li>\n\t<li>-0.0786835006317892</li>\n\t<li>0.825872164196382</li>\n\t<li>-0.820655738172255</li>\n\t<li>0.664055924366569</li>\n\t<li>0.587599277499287</li>\n\t<li>-0.897930686896009</li>\n\t<li>0.401674553762384</li>\n\t<li>0.217734117193093</li>\n\t<li>0.217142391970091</li>\n\t<li>-0.796538898756655</li>\n\t<li>-0.576413113925346</li>\n\t<li>-0.573588500369916</li>\n\t<li>-0.36509907466483</li>\n\t<li>-0.719412032751027</li>\n\t<li>0.330117965669797</li>\n\t<li>-0.406017822166631</li>\n\t<li>-2.0152380090943</li>\n\t<li>-0.700921558992799</li>\n\t<li>-0.328497973161081</li>\n\t<li>0.476954385929733</li>\n\t<li>-0.839813909077639</li>\n\t<li>0.455131914770289</li>\n\t<li>-0.214912401081761</li>\n\t<li>0.826046374965097</li>\n\t<li>0.406102025837856</li>\n\t<li>0.70398485030001</li>\n\t<li>-0.209595610886854</li>\n\t<li>1.19360348212929</li>\n\t<li>-0.649477054551441</li>\n\t<li>1.30339344664443</li>\n\t<li>0.160170870390534</li>\n\t<li>0.72345203809513</li>\n\t<li>-0.0619390475005586</li>\n\t<li>-1.47412828141158</li>\n\t<li>1.27631195768812</li>\n\t<li>0.74440549248358</li>\n\t<li>-1.64751278809014</li>\n\t<li>-0.0139139733866786</li>\n\t<li>0.125716778086495</li>\n\t<li>0.982829228790095</li>\n\t<li>1.07637384107349</li>\n\t<li>0.864344187253821</li>\n\t<li>2.15667242570809</li>\n\t<li>-0.23247045829374</li>\n\t<li>0.079453149941089</li>\n\t<li>-0.308778420291222</li>\n\t<li>1.21385193877438</li>\n\t<li>1.06572859683102</li>\n\t<li>-0.322864786831169</li>\n\t<li>0.307363442493051</li>\n\t<li>-0.46610046927065</li>\n\t<li>-0.0517662384773118</li>\n\t<li>-0.81549380302864</li>\n\t<li>-0.245425661570757</li>\n\t<li>0.583485060879689</li>\n\t<li>1.38497361743764</li>\n\t<li>1.15196205843596</li>\n\t<li>-0.665936471856569</li>\n\t<li>-0.472102460826137</li>\n\t<li>-0.300507247335262</li>\n\t<li>-0.117678540165058</li>\n\t<li>1.28337651756581</li>\n\t<li>0.793660443107462</li>\n\t<li>1.6322692517548</li>\n\t<li>-0.0833663785838563</li>\n\t<li>-0.313927208222286</li>\n\t<li>1.53793500844869</li>\n\t<li>-0.470762491725332</li>\n\t<li>-1.07191364911447</li>\n\t<li>-0.0540240120941599</li>\n\t<li>-0.271787954948616</li>\n\t<li>-0.431567813771528</li>\n</ol>\n"}},"1":{"name":"stderr","text":"`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n"},"2":{"data":{"image/svg+xml":"354e6250d6a32de634e0bebd48dc4788e2ec4c1e"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":2.6875,"start":1555693571590,"state":"done","type":"cell"}
{"end":1555693794195,"exec_count":134,"id":"2295a5","input":"rn<-rnorm(10000, mean=0, sd=1)\nvalues=c(-2, -1, 0, 1, 2)\npercentages<-pnorm(values, mean=0, sd=1)\npercentages\nquantile(rn, percentages)","kernel":"ir-sage","output":{"0":{"data":{"text/html":"<ol class=list-inline>\n\t<li>0.0227501319481792</li>\n\t<li>0.158655253931457</li>\n\t<li>0.5</li>\n\t<li>0.841344746068543</li>\n\t<li>0.977249868051821</li>\n</ol>\n"}},"1":{"data":{"text/html":"<dl class=dl-horizontal>\n\t<dt>2.275013%</dt>\n\t\t<dd>-1.99326742851216</dd>\n\t<dt>15.86553%</dt>\n\t\t<dd>-1.00196416270777</dd>\n\t<dt>50%</dt>\n\t\t<dd>-0.00197718784652935</dd>\n\t<dt>84.13447%</dt>\n\t\t<dd>0.995650639360544</dd>\n\t<dt>97.72499%</dt>\n\t\t<dd>2.02188057528004</dd>\n</dl>\n"}}},"pos":2.8125,"start":1555693794120,"state":"done","type":"cell"}
{"end":1555693890786,"exec_count":135,"id":"9dfb00","input":"gg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\ncritval<-qnorm(.025, mean=0, sd=1)\ncritval\nggplot(gg) + \n  geom_path(aes(x,y)) +\n  geom_ribbon(data=gg[gg$x<critval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)","kernel":"ir-sage","output":{"0":{"data":{"text/html":"-1.95996398454005"}},"1":{"data":{"image/svg+xml":"4849952c1be8ec27502b6f5cb539fc476f4c3907"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":2.859375,"start":1555693890200,"state":"done","type":"cell"}
{"end":1555693926592,"exec_count":136,"id":"bfaf76","input":"gg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dnorm(gg$x)\nlowcritval<-qnorm(.025, mean=0, sd=1)\nhighcritval<-qnorm(.025, mean=0, sd=1, lower.tail=FALSE)\nggplot(gg) + \n  geom_path(aes(x,y)) +\n  geom_ribbon(data=gg[gg$x < lowcritval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)+\n  geom_ribbon(data=gg[gg$x>highcritval,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)","kernel":"ir-sage","output":{"0":{"data":{"image/svg+xml":"239ea2d686a8fb09921fd4a11df849a97549f41a"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":2.87109375,"start":1555693925813,"state":"done","type":"cell"}
{"end":1555695178662,"exec_count":138,"id":"480b81","input":"df   <- 21\np    <- 0.05\ngg   <- data.frame(x=seq(-5,5,0.02))\ngg$y <- dt(gg$x,df)\ncritValue<-qt(p,df,lower.tail=F)\ntestStatistic<-0.65867\nggplot(gg) + \n  geom_path(aes(x,y), colour=\"red\") +\n  geom_ribbon(data=gg[gg$x>critValue,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)","kernel":"ir-sage","output":{"0":{"data":{"image/svg+xml":"febcf8251e3c824605a7700033610e8fceacc145"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":3.75,"start":1555695178041,"state":"done","type":"cell"}
{"end":1555695308612,"exec_count":139,"id":"33e015","input":"gg$altx<-gg$x+0.65867\nggplot(gg) + \n  geom_path(aes(x,y), colour=\"red\") +\n  geom_path(aes(altx,y), colour=\"blue\")+\n  geom_ribbon(data=gg[gg$x>critValue,],\n                 aes(x, ymin=0, ymax=y),\n                 colour=\"red\", fill=\"red\", alpha=.5)+\n  geom_ribbon(data=gg[gg$altx<critValue,], aes(altx,ymin=0,ymax=y), \n               colour=\"blue\", fill=\"blue\", alpha=.5)","kernel":"ir-sage","output":{"0":{"data":{"image/svg+xml":"3007feae053c9c2da1fb1f210fb02fa7a7637d39"},"metadata":{"image/svg+xml":{"isolated":true}}}},"pos":3.84375,"start":1555695308054,"state":"done","type":"cell"}
{"end":1555695477457,"exec_count":140,"id":"d127af","input":"1-pt(critValue-testStatistic, 21, lower.tail=TRUE)","kernel":"ir-sage","output":{"0":{"data":{"text/html":"0.150132273186046"}}},"pos":3.9609375,"start":1555695477431,"state":"done","type":"cell"}
{"exec_count":141,"id":"f296f4","input":"expmean<-335\naltmean<-??\nstdev<-??\nsamplesize<-??\nstanderr<-stdev/sqrt(??)\ndf<-??\nteststatistic<-(altmean-expmean)/standerr","kernel":"ir-sage","pos":3.984375,"state":"done","type":"cell"}
{"id":"0e205d","input":"","kernel":"ir-sage","pos":3.99169921875,"type":"cell"}
{"id":"131f6d","input":"","pos":3.484375,"type":"cell"}
{"id":"199e3e","input":"","kernel":"ir-sage","pos":3.9453125,"type":"cell"}
{"id":"1dd45e","input":"","pos":3.4375,"type":"cell"}
{"id":"25bae4","input":"","pos":3.46875,"type":"cell"}
{"id":"5341a5","input":"","kernel":"ir-sage","pos":2.9375,"type":"cell"}
{"id":"70a17a","input":"","pos":3.4921875,"type":"cell"}
{"id":"730aa8","input":"","kernel":"ir-sage","pos":3.99609375,"type":"cell"}
{"id":"929070","input":"gg$y <- dt(gg$x, df=20)","pos":3.125,"type":"cell"}
{"id":"99a5c3","input":"","kernel":"ir-sage","pos":3.9990234375,"type":"cell"}
{"id":"a62f94","input":"","kernel":"ir-sage","pos":3.990234375,"type":"cell"}
{"id":"a873e9","input":"","pos":6,"type":"cell"}
{"id":"ae4176","input":"","kernel":"ir-sage","pos":3.9912109375,"type":"cell"}
{"id":"b306b8","input":"","kernel":"ir-sage","pos":2.96875,"type":"cell"}
{"id":"d16243","input":"","kernel":"ir-sage","pos":3.9375,"type":"cell"}
{"id":"d57f4e","input":"","kernel":"ir-sage","pos":2.875,"type":"cell"}
{"id":"e118e3","input":"rn<-rt(100, df=20)","pos":3.375,"type":"cell"}
{"id":0,"time":1556021090528,"type":"user"}
{"last_load":1555593682061,"type":"file"}